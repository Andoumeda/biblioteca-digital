openapi: 3.0.1
info:
  title: Biblioteca Digital API
  version: v1.0
  description: API Documentation for Biblioteca Digital - Módulo de Publicaciones

servers:
  - url: http://localhost:8082
    description: Módulo de Publicaciones

tags:
  - name: Publications
    description: Gestión de publicaciones
  - name: Categories
    description: Gestión de categorías
  - name: Favorites
    description: Gestión de favoritos

paths:
  # ==========================================
  # PUBLICATION ENDPOINTS (Puerto 8082)
  # ==========================================
  /publications:
    post:
      tags:
        - Publications
      summary: Crear publicación
      description: Crea una nueva publicación asociada a un perfil de usuario
      operationId: createPublication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/PublicationRequestDTO'
            example:
              userProfileId: 1
              title: "Nueva publicación sobre libros"
              description: "Descripción detallada de la publicación sobre libros."
              categoryIds: [ 1, 3 ]
      responses:
        '201':
          description: Publicación creada
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PublicationResponseDTO'
              example:
                id: 3
                userProfileId: 1
                title: "Nueva publicación sobre libros"
                description: "Descripción detallada de la publicación sobre libros."
                state: "pending"
                categoryIds: [ 1, 3 ]
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-06T10:30:00"
        '400':
          $ref: './models/openapi.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          description: Perfil de usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    format: int32
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Perfil de usuario no encontrado con ID: 1"
                  path:
                    type: string
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    format: int32
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string
                    example: "Error al crear la publicación"
                  path:
                    type: string

  /publications/page/{page}/size/{size}:
    get:
      tags:
        - Publications
      summary: Obtener todas las publicaciones (paginado)
      description: Lista paginada de publicaciones
      operationId: getAllPublications
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Lista de publicaciones
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    title: "Publicación 1"
                    description: "Descripción de la publicación 1"
                    state: "approved"
                    userProfileId: 1
                    categoryIds: [1, 2]
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                  - id: 2
                    title: "Publicación 2"
                    description: "Descripción de la publicación 2"
                    state: "pending"
                    userProfileId: 2
                    categoryIds: [2, 3]
                    createdAt: "2025-10-05T09:15:00"
                    updatedAt: "2025-10-05T09:15:00"
                pageSize: 20
                totalItems: 2
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron publicaciones

  /publications/title/{title}/page/{page}/size/{size}:
    get:
      tags:
        - Publications
      summary: Obtener publicaciones por título (paginado)
      description: Lista paginada de publicaciones filtradas por título
      operationId: getPublicationsByTitle
      parameters:
        - name: title
          in: path
          required: true
          description: Título de la publicación a buscar
          schema:
            type: string
          example: "libros"
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Lista de publicaciones filtradas por título
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    title: "Publicación sobre libros clásicos"
                    description: "Descripción de la publicación 1"
                    state: "approved"
                    userProfileId: 1
                    categoryIds: [1]
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                pageSize: 20
                totalItems: 1
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron publicaciones con el título especificado

  /publications/description/{desc}/page/{page}/size/{size}:
    get:
      tags:
        - Publications
      summary: Obtener publicaciones por descripción (paginado)
      description: Lista paginada de publicaciones filtradas por descripción
      operationId: getPublicationsByDescription
      parameters:
        - name: desc
          in: path
          required: true
          description: Descripción de la publicación a buscar
          schema:
            type: string
          example: "ciencia ficción"
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Lista de publicaciones filtradas por descripción
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 2
                    title: "Publicación sobre el futuro"
                    description: "Una exploración de ciencia ficción"
                    state: "approved"
                    userProfileId: 2
                    categoryIds: [3]
                    createdAt: "2025-10-05T09:15:00"
                    updatedAt: "2025-10-05T09:15:00"
                pageSize: 20
                totalItems: 1
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron publicaciones con la descripción especificada

  /publications/state/{state}/page/{page}/size/{size}:
    get:
      tags:
        - Publications
      summary: Obtener publicaciones por estado (paginado)
      description: Lista paginada de publicaciones filtradas por estado
      operationId: getPublicationsByState
      parameters:
        - name: state
          in: path
          required: true
          description: Estado de la publicación
          schema:
            type: string
            enum: [pending, approved, rejected]
          example: approved
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Lista de publicaciones filtradas por estado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    title: "Publicación aprobada 1"
                    description: "Descripción de la publicación aprobada"
                    state: "approved"
                    userProfileId: 1
                    categoryIds: [1, 2]
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                  - id: 3
                    title: "Publicación aprobada 2"
                    description: "Otra publicación aprobada"
                    state: "approved"
                    userProfileId: 3
                    categoryIds: [2]
                    createdAt: "2025-10-04T14:20:00"
                    updatedAt: "2025-10-04T14:20:00"
                pageSize: 20
                totalItems: 2
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron publicaciones con el estado especificado

  /publications/user/{user}/page/{page}/size/{size}:
    get:
      tags:
        - Publications
      summary: Obtener publicaciones por usuario (paginado)
      description: Lista paginada de publicaciones filtradas por usuario
      operationId: getPublicationsByUser
      parameters:
        - name: user
          in: path
          required: true
          description: ID del perfil de usuario
          schema:
            type: integer
            format: int32
          example: 1
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Lista de publicaciones filtradas por usuario
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    title: "Publicación del usuario 1"
                    description: "Descripción de la publicación"
                    state: "approved"
                    userProfileId: 1
                    categoryIds: [1, 2]
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                pageSize: 20
                totalItems: 1
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron publicaciones para el usuario especificado

  /publications/category/{cat}/page/{page}/size/{size}:
    get:
      tags:
        - Publications
      summary: Obtener publicaciones por categoría (paginado)
      description: Lista paginada de publicaciones filtradas por categoría
      operationId: getPublicationsByCategory
      parameters:
        - name: cat
          in: path
          required: true
          description: ID de la categoría
          schema:
            type: integer
            format: int32
          example: 1
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Lista de publicaciones filtradas por categoría
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    title: "Publicación de la categoría"
                    description: "Descripción de la publicación"
                    state: "approved"
                    userProfileId: 1
                    categoryIds: [1]
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                pageSize: 20
                totalItems: 1
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron publicaciones para la categoría especificada

  /publications/{id}:
    get:
      tags:
        - Publications
      summary: Obtener publicación por ID
      operationId: getPublicationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Publicación encontrada
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PublicationResponseDTO'
              example:
                id: 1
                userProfileId: 1
                title: "Publicación 1"
                description: "Descripción de la publicación 1"
                state: "approved"
                categoryIds: [1, 2]
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-06T10:30:00"
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

    put:
      tags:
        - Publications
      summary: Actualizar publicación
      operationId: updatePublication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/PublicationRequestDTO'
            example:
              userProfileId: 1
              title: "Publicación actualizada"
              description: "Descripción actualizada de la publicación."
              categoryIds: [1, 2, 3]
      responses:
        '200':
          description: Publicación actualizada
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PublicationResponseDTO'
              example:
                id: 1
                userProfileId: 1
                title: "Publicación actualizada"
                description: "Descripción actualizada de la publicación."
                state: "pending"
                categoryIds: [1, 2, 3]
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-06T10:30:00"
        '400':
          $ref: './models/openapi.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

    delete:
      tags:
        - Publications
      summary: Eliminar publicación (borrado lógico)
      description: Marca la publicación como eliminada sin borrarla físicamente
      operationId: deletePublication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '204':
          description: Publicación marcada como eliminada
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

  /publications/{id}/approve:
    patch:
      tags:
        - Publications
      summary: Aprobar publicación
      description: Cambia el estado de una publicación a 'approved' (solo administradores)
      operationId: approvePublication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 2
      responses:
        '200':
          description: Publicación aprobada exitosamente
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PublicationResponseDTO'
              example:
                id: 2
                userProfileId: 1
                title: "Publicación aprobada"
                description: "Esta publicación fue aprobada por el administrador"
                state: "approved"
                categoryIds: [1, 2]
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-11T15:45:00"
        '400':
          $ref: './models/openapi.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './models/openapi.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

  /publications/{id}/reject:
    patch:
      tags:
        - Publications
      summary: Rechazar publicación
      description: Cambia el estado de una publicación a 'rejected' (solo administradores)
      operationId: rejectPublication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 3
      responses:
        '200':
          description: Publicación rechazada exitosamente
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PublicationResponseDTO'
              example:
                id: 3
                userProfileId: 2
                title: "Publicación rechazada"
                description: "Esta publicación fue rechazada por el administrador"
                state: "rejected"
                categoryIds: [1]
                createdAt: "2025-10-05T09:15:00"
                updatedAt: "2025-10-11T15:45:00"
        '400':
          $ref: './models/openapi.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './models/openapi.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

  # ==========================================
  # CATEGORY ENDPOINTS (Puerto 8082)
  # ==========================================
  /categories:
    post:
      tags:
        - Categories
      summary: Crear categoría
      description: Crea una nueva categoría (requiere permisos de administrador)
      operationId: createCategory
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/CategoryRequestDTO'
            example:
              name: "Ciencia Ficción"
      responses:
        '201':
          description: Categoría creada
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/CategoryResponseDTO'
              example:
                id: 3
                name: "Ciencia Ficción"
                isDeleted: false
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-06T10:30:00"
        '400':
          $ref: './models/openapi.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './models/openapi.yaml#/components/responses/ForbiddenError'
        '409':
          description: Conflicto - Categoría ya existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    format: int32
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Categoría ya existe con nombre: Ciencia Ficción"
                  path:
                    type: string
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    format: int32
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string
                    example: "Error al crear la categoría"
                  path:
                    type: string

  /categories/page/{page}/size/{size}:
    get:
      tags:
        - Categories
      summary: Obtener todas las categorías (paginado)
      description: Lista paginada de todas las categorías
      operationId: getAllCategories
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Lista de categorías
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    name: "Ficción"
                    isDeleted: false
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                  - id: 2
                    name: "No Ficción"
                    isDeleted: false
                    createdAt: "2025-10-05T09:15:00"
                    updatedAt: "2025-10-05T09:15:00"
                  - id: 3
                    name: "Ciencia Ficción"
                    isDeleted: false
                    createdAt: "2025-10-04T14:20:00"
                    updatedAt: "2025-10-04T14:20:00"
                pageSize: 20
                totalItems: 3
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron categorías

  /categories/name/{name}/page/{page}/size/{size}:
    get:
      tags:
        - Categories
      summary: Obtener categorías por nombre (paginado)
      description: Busca categorías por nombre con paginación (puede retornar múltiples resultados)
      operationId: getCategoriesByName
      parameters:
        - name: name
          in: path
          required: true
          description: Nombre de la categoría a buscar
          schema:
            type: string
          example: "Ficción"
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Categorías encontradas (paginadas)
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    name: "Ficción"
                    isDeleted: false
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                pageSize: 20
                totalItems: 1
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron categorías con el nombre especificado
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

  /categories/{id}:
    get:
      tags:
        - Categories
      summary: Obtener categoría por ID
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la categoría
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Categoría encontrada
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/CategoryResponseDTO'
              example:
                id: 1
                name: "Ficción"
                isDeleted: false
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-06T10:30:00"
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

    put:
      tags:
        - Categories
      summary: Actualizar categoría
      description: Actualiza una categoría existente por ID
      operationId: updateCategory
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la categoría a actualizar
          schema:
            type: integer
            format: int32
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/CategoryRequestDTO'
            example:
              name: "Ficción Científica"
      responses:
        '200':
          description: Categoría actualizada
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/CategoryResponseDTO'
              example:
                id: 1
                name: "Ficción Científica"
                isDeleted: false
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-10T15:45:00"
        '400':
          $ref: './models/openapi.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './models/openapi.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'
        '409':
          description: Conflicto - Categoría ya existe con ese nombre
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    format: int32
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Categoría ya existe con nombre: Ficción Científica"
                  path:
                    type: string

    delete:
      tags:
        - Categories
      summary: Eliminar categoría (borrado lógico)
      description: Marca la categoría como eliminada sin borrarla físicamente
      operationId: deleteCategory
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la categoría a eliminar
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '204':
          description: Categoría marcada como eliminada
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './models/openapi.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

  # ==========================================
  # FAVORITE ENDPOINTS (Puerto 8082)
  # ==========================================
  /favorites:
    post:
      tags:
        - Favorites
      summary: Agregar a favoritos
      description: Marca una publicación como favorita para un usuario
      operationId: addFavorite
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/FavoriteRequestDTO'
            example:
              userProfileId: 1
              publicationId: 101
      responses:
        '201':
          description: Favorito agregado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/FavoriteResponseDTO'
              example:
                id: 1
                userProfileId: 1
                publicationId: 101
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-06T10:30:00"
        '400':
          $ref: './models/openapi.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          description: Usuario o publicación no encontrados
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    format: int32
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Perfil de usuario no encontrado con ID: 1"
                  path:
                    type: string
        '409':
          description: Conflicto - Publicación ya está en favoritos
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    format: int32
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Esta publicación ya está en favoritos"
                  path:
                    type: string
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    format: int32
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string
                    example: "Error al agregar el favorito"
                  path:
                    type: string

  /favorites/page/{page}/size/{size}:
    get:
      tags:
        - Favorites
      summary: Obtener todos los favoritos (paginado)
      description: Lista paginada de todos los favoritos
      operationId: getAllFavorites
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Lista de favoritos
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    userProfileId: 1
                    publicationId: 101
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                  - id: 2
                    userProfileId: 1
                    publicationId: 102
                    createdAt: "2025-10-05T09:15:00"
                    updatedAt: "2025-10-05T09:15:00"
                pageSize: 20
                totalItems: 2
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron favoritos
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'

  /favorites/user/{user}/page/{page}/size/{size}:
    get:
      tags:
        - Favorites
      summary: Obtener favoritos de un usuario (paginado)
      description: Lista paginada de todas las publicaciones favoritas de un usuario específico
      operationId: getFavoritesByUser
      security:
        - bearerAuth: []
      parameters:
        - name: user
          in: path
          required: true
          description: ID del perfil de usuario
          schema:
            type: integer
            format: int32
          example: 1
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Favoritos del usuario
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    userProfileId: 1
                    publicationId: 101
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                  - id: 2
                    userProfileId: 1
                    publicationId: 105
                    createdAt: "2025-10-05T09:15:00"
                    updatedAt: "2025-10-05T09:15:00"
                pageSize: 20
                totalItems: 2
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron favoritos para el usuario especificado
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

  /favorites/publication/{pub}/page/{page}/size/{size}:
    get:
      tags:
        - Favorites
      summary: Obtener favoritos de una publicación (paginado)
      description: Lista paginada de todos los usuarios que marcaron una publicación como favorita
      operationId: getFavoritesByPublication
      security:
        - bearerAuth: []
      parameters:
        - name: pub
          in: path
          required: true
          description: ID de la publicación
          schema:
            type: integer
            format: int32
          example: 101
        - name: page
          in: path
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
          description: Número de página
        - name: size
          in: path
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          example: 20
          description: Tamaño de página
      responses:
        '200':
          description: Favoritos de la publicación
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedResponseDTO'
              example:
                data:
                  - id: 1
                    userProfileId: 1
                    publicationId: 101
                    createdAt: "2025-10-06T10:30:00"
                    updatedAt: "2025-10-06T10:30:00"
                  - id: 5
                    userProfileId: 3
                    publicationId: 101
                    createdAt: "2025-10-04T11:20:00"
                    updatedAt: "2025-10-04T11:20:00"
                pageSize: 20
                totalItems: 2
                currentPage: 0
                totalPages: 1
                prev: false
                next: false
        '204':
          description: No se encontraron favoritos para la publicación especificada
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

  /favorites/{id}:
    get:
      tags:
        - Favorites
      summary: Obtener favorito por ID
      operationId: getFavoriteById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Favorito encontrado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/FavoriteResponseDTO'
              example:
                id: 1
                userProfileId: 1
                publicationId: 101
                createdAt: "2025-10-06T10:30:00"
                updatedAt: "2025-10-06T10:30:00"
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

    delete:
      tags:
        - Favorites
      summary: Eliminar de favoritos (borrado lógico)
      description: Marca el favorito como eliminado sin borrarlo físicamente
      operationId: removeFavorite
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '204':
          description: Favorito eliminado
        '401':
          $ref: './models/openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './models/openapi.yaml#/components/responses/NotFoundError'

security:
  - bearerAuth: []