openapi: 3.0.1
info:
  title: Biblioteca Digital API
  version: v1.0
  description: API Documentation for Biblioteca Digital

servers:
  - url: http://localhost:8083
    description: Módulo de Libros

tags:
  - name: Books
    description: Gestión de libros
  - name: Authors
    description: Gestión de autores
  - name: Ratings
    description: Gestión de valoraciones

# security:
  # - bearerAuth: []

paths:

  # ===========================
  # BOOKS
  # ===========================
  /books:
    post:
      tags: [Books]
      summary: Crear libro
      operationId: createBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/BookRequestDTO'
      responses:
        '201':
          description: Libro creado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/BookResponseDTO'

  /books/page/{page}/size/{size}:
    get:
      tags: [Books]
      summary: Obtener todos los libros
      operationId: getAllBooks
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de libros
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedBookResponseDTO'

  /books/{id}/page/{page}/size/{size}:
    get:
      tags: [Books]
      summary: Obtener libro por ID
      operationId: getBookById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Libro encontrado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/BookResponseDTO'

  /books/{id}/authors/page/{page}/size/{size}:
    get:
      tags: [Books]
      summary: Obtener autores de un libro
      operationId: getAuthorsByBookId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de autores de un libro
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedAuthorResponseDTO'

  /books/{id}/ratings/page/{page}/size/{size}:
    get:
      tags: [Books]
      summary: Obtener ratings de un libro
      operationId: getRatingsByBookId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de valoraciones de un libro
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedRatingResponseDTO'

  /books/title/{title}/page/{page}/size/{size}:
    get:
      tags: [Books]
      summary: Obtener libros por título
      operationId: getBooksByTitle
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de libros filtrados por título
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedBookResponseDTO'

  /books/publication/{publicationId}/page/{page}/size/{size}:
    get:
      tags: [Books]
      summary: Obtener libros de una publicación
      operationId: getBooksByPublicationId
      parameters:
        - name: publicationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: ID de la publicación
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de libros de una publicación
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedBookResponseDTO'

  /books/{id}:
    put:
      tags: [Books]
      summary: Actualizar libro
      operationId: updateBook
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/BookRequestDTO'
      responses:
        '200':
          description: Libro actualizado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/BookResponseDTO'
    delete:
      tags: [Books]
      summary: Eliminar libro (soft delete)
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Libro marcado como eliminado

  # ===========================
  # AUTHORS
  # ===========================
  /authors:
    post:
      tags: [Authors]
      summary: Crear autor
      operationId: createAuthor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/AuthorRequestDTO'
      responses:
        '201':
          description: Autor creado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/AuthorResponseDTO'

  /authors/page/{page}/size/{size}:
    get:
      tags: [Authors]
      summary: Obtener todos los autores
      operationId: getAllAuthors
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de autores
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedAuthorResponseDTO'

  /authors/{id}/page/{page}/size/{size}:
    get:
      tags: [Authors]
      summary: Obtener autor por ID
      operationId: getAuthorById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Autor encontrado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/AuthorResponseDTO'

  /authors/{id}/books/page/{page}/size/{size}:
    get:
      tags: [Authors]
      summary: Obtener los libros de un autor
      operationId: getBooksByAuthorId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de libros de un autor
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedBookResponseDTO'

  /authors/fullname/{fullName}/page/{page}/size/{size}:
    get:
      tags: [Authors]
      summary: Obtener autores por nombre completo
      operationId: getAuthorsByFullName
      parameters:
        - name: fullName
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de autores filtrados por nombre completo
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedAuthorResponseDTO'

  /authors/birthdate/{birthdate}/page/{page}/size/{size}:
    get:
      tags: [Authors]
      summary: Obtener autores por fecha de nacimiento
      operationId: getAuthorsByBirthdate
      parameters:
        - name: birthdate
          in: path
          required: true
          schema:
            type: string
            format: date
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de autores filtrados por fecha de nacimiento
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedAuthorResponseDTO'

  /authors/nationality/{nationality}/page/{page}/size/{size}:
    get:
      tags: [Authors]
      summary: Obtener autores por nacionalidad
      operationId: getAuthorsByNationality
      parameters:
        - name: nationality
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de autores filtrados por la nacionalidad
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedAuthorResponseDTO'

  /authors/{id}:
    put:
      tags: [Authors]
      summary: Actualizar autor
      operationId: updateAuthor
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/AuthorRequestDTO'
            example:
              fullName: "Miguel de Cervantes Saavedra"
              bio: "Escritor español, autor de 'Don Quijote'. Nació en Alcalá de Henares."
              birthDate: "1547-09-29"
              nationality: "Española"
      responses:
        '200':
          description: Autor actualizado
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/AuthorResponseDTO'
    delete:
      tags: [Authors]
      summary: Eliminar autor (soft delete)
      operationId: deleteAuthor
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Autor marcado como eliminado

  # ===========================
  # RATINGS
  # ===========================
  /ratings:
    post:
      tags: [Ratings]
      summary: Crear valoración
      operationId: createRating
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './models/openapi.yaml#/components/schemas/RatingRequestDTO'
      responses:
        '201':
          description: Valoración creada
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/RatingResponseDTO'

  /ratings/page/{page}/size/{size}:
    get:
      tags: [Ratings]
      summary: Obtener todas las valoraciones
      operationId: getAllRatings
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de valoraciones
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedRatingResponseDTO'

  /ratings/{id}/page/{page}/size/{size}:
    get:
      tags: [Ratings]
      summary: Obtener valoración por ID
      operationId: getRatingById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Valoración encontrada
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/RatingResponseDTO'

  /ratings/valoration/{min}/{max}/page/{page}/size/{size}:
    get:
      tags: [Ratings]
      summary: Obtener valoraciones por rango de puntuación
      operationId: getRatingsByScoreRange
      parameters:
        - name: min
          in: path
          required: true
          schema:
            type: integer
        - name: max
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Valoraciones filtradas por puntuación
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedRatingResponseDTO'

  /ratings/userprofile/{userProfileId}/page/{page}/size/{size}:
    get:
      tags: [Ratings]
      summary: Obtener valoraciones de un usuario
      operationId: getRatingsByUserProfileId
      parameters:
        - name: userProfileId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de valoraciones de un usuario
          content:
            application/json:
              schema:
                $ref: './models/openapi.yaml#/components/schemas/PaginatedRatingResponseDTO'

  /ratings/{id}:
    put:
      tags: [Ratings]
      summary: Actualizar valoración
      operationId: updateRating
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: RatingRequestDTO
      responses:
        '200':
          description: Valoración actualizada
          content:
            application/json:
              schema:
                type: object
                description: RatingResponseDTO
    delete:
      tags: [Ratings]
      summary: Eliminar valoración (soft delete)
      operationId: deleteRating
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Valoración marcada como eliminada
