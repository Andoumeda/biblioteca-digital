openapi: 3.0.1
info:
  title: Modelado de DTOs para el Servicio de Biblioteca
  version: v1.0

components:
  schemas:
    BaseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Identificador único del registro
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del registro
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización del registro
        isDeleted:
          type: boolean
          description: Indica si el registro fue eliminado lógicamente (soft delete)

    RoleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          description: Nombre del rol (e.g., ADMIN, USER)
        description:
          type: string

    UserDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - type: object
          properties:
            username:
              type: string
              description: Nombre de usuario único
            email:
              type: string
              format: email
              description: Correo electrónico del usuario
            role:
              $ref: '#/components/schemas/RoleDTO'

    UserRegistrationRequestDTO:
      type: object
      required:
        - username
        - email
        - password
        - roleId
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 100
        password:
          type: string
          format: password
          minLength: 8
        roleId:
          type: integer
          format: int32

    UserLoginRequestDTO:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          maxLength: 100
        password:
          type: string
          format: password

    AuthResponseDTO:
      type: object
      properties:
        token:
          type: string
          description: JWT token
        user:
          $ref: '#/components/schemas/UserDTO'

    UserProfileRequestDTO:
      type: object
      required:
        - userId
        - displayName
      properties:
        userId:
          type: integer
          format: int32
          description: ID del usuario asociado al perfil
        displayName:
          type: string
          maxLength: 100
          description: Nombre visible del usuario en la plataforma
        bio:
          type: string
          description: Biografía o información adicional del usuario
        profilePicture:
          type: string
          maxLength: 255
          description: URL de la foto de perfil del usuario

    UserProfileResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - $ref: '#/components/schemas/UserProfileRequestDTO'
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/UserDTO'

    AnnouncementRequestDTO:
      type: object
      required:
        - title
        - type
        - targetAudience
      properties:
        title:
          type: string
          maxLength: 255
          description: Título del anuncio
        message:
          type: string
          description: Mensaje o cuerpo del anuncio
        type:
          type: string
          enum:
            - alert
            - info
            - warning
            - promo
          description: Tipo de anuncio
        targetAudience:
          type: string
          enum:
            - all
            - new_users
            - admins
          description: Audiencia objetivo del anuncio

    AnnouncementResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - $ref: '#/components/schemas/AnnouncementRequestDTO'
        - type: object

    FavoriteRequestDTO:
      type: object
      required:
        - userProfileId
        - publicationId
      properties:
        userProfileId:
          type: integer
          format: int32
          description: ID del perfil de usuario
        publicationId:
          type: integer
          format: int32
          description: ID de la publicación favorita

    FavoriteResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - type: object
          properties:
            userProfile:
              $ref: '#/components/schemas/UserProfileResponseDTO'
            publication:
              $ref: '#/components/schemas/PublicationResponseDTO'

    PublicationRequestDTO:
      type: object
      required:
        - userProfileId
        - title
        - state
      properties:
        userProfileId:
          type: integer
          format: int32
          description: ID del perfil de usuario que crea la publicación
        title:
          type: string
          description: Título de la publicación
        description:
          type: string
          description: Descripción de la publicación
        state:
          type: string
          enum:
            - pending
            - approved
            - rejected
          description: Estado de la publicación
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
          description: IDs de las categorías asociadas

    PublicationResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - $ref: '#/components/schemas/PublicationRequestDTO'
        - type: object
          properties:
            userProfile:
              $ref: '#/components/schemas/UserProfileResponseDTO'
            categories:
              type: array
              items:
                $ref: '#/components/schemas/CategoryResponseDTO'
            books:
              type: array
              items:
                $ref: '#/components/schemas/BookResponseDTO'

    CategoryRequestDTO:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 100
          description: Nombre de la categoría

    CategoryResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - $ref: '#/components/schemas/CategoryRequestDTO'
        - type: object

    BookRequestDTO:
      type: object
      required:
        - publicationId
        - title
        - bookUrl
        - numPages
        - fileSize
        - authorIds
      properties:
        publicationId:
          type: integer
          format: int32
          description: ID de la publicación asociada
        title:
          type: string
          maxLength: 255
          description: Título del libro
        description:
          type: string
          description: Descripción del libro
        bookUrl:
          type: string
          maxLength: 255
          description: URL del archivo del libro
        coverImg:
          type: string
          maxLength: 255
          description: URL de la imagen de portada
        numPages:
          type: integer
          format: int32
          minimum: 1
          description: Número de páginas del libro
        fileSize:
          type: integer
          format: int32
          minimum: 1
          description: Tamaño del archivo en bytes
        authorIds:
          type: array
          items:
            type: integer
            format: int32
          description: IDs de los autores del libro

    BookResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - $ref: '#/components/schemas/BookRequestDTO'
        - type: object
          properties:
            authors:
              type: array
              items:
                $ref: '#/components/schemas/AuthorResponseDTO'
            ratingAverage:
              type: number
              format: float
              description: Puntuación promedio del libro
            ratingsCount:
              type: integer
              format: int32
              description: Número total de valoraciones del libro

    AuthorRequestDTO:
      type: object
      required:
        - fullName
        - bio
      properties:
        fullName:
          type: string
          maxLength: 150
          description: Nombre completo del autor
        bio:
          type: string
          description: Biografía del autor
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento del autor
        nationality:
          type: string
          maxLength: 100
          description: Nacionalidad del autor

    AuthorResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - $ref: '#/components/schemas/AuthorRequestDTO'
        - type: object

    RatingRequestDTO:
      type: object
      required:
        - userProfileId
        - bookId
        - valoration
      properties:
        userProfileId:
          type: integer
          format: int32
          description: ID del perfil de usuario que realiza la valoración
        bookId:
          type: integer
          format: int32
          description: ID del libro que se está valorando
        valoration:
          type: integer
          format: int32
          minimum: 1
          maximum: 5
          description: Puntuación otorgada (1-5)
        comment:
          type: string
          description: Comentario adicional sobre el libro

    RatingResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - $ref: '#/components/schemas/RatingRequestDTO'
        - type: object
          properties:
            userProfile:
              $ref: '#/components/schemas/UserProfileResponseDTO'
            book:
              $ref: '#/components/schemas/BookResponseDTO'

    PaginatedResponseDTO:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        next:
          type: boolean
        prev:
          type: boolean

    PaginatedUserProfileResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserProfileResponseDTO'

    PaginatedAnnouncementResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AnnouncementResponseDTO'

    PaginatedFavoriteResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/FavoriteResponseDTO'

    PaginatedPublicationResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PublicationResponseDTO'

    PaginatedCategoryResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CategoryResponseDTO'

    PaginatedBookResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BookResponseDTO'

    PaginatedAuthorResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AuthorResponseDTO'

    PaginatedRatingResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RatingResponseDTO'

    PaginatedUserResponseDTO:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponseDTO'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserDTO'

    ErrorResponseDTO:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        message:
          type: string
        path:
          type: string

  responses:
    UnauthorizedError:
      description: No autorizado - Token inválido o no proporcionado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDTO'

    ForbiddenError:
      description: Prohibido - No tiene permisos para realizar esta acción
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDTO'

    NotFoundError:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDTO'

    BadRequestError:
      description: Petición inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDTO'

paths: {}
